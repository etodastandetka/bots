import logging
import asyncio
from typing import Dict
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
try:
    from config import BOT_TOKENS, CHANNEL_LINK
    BOT_TOKEN = BOT_TOKENS["main"]
except ImportError:
    BOT_TOKEN = "8206205994:AAE00qmtzbMQbQJRzuwKLeTkAbKf8ZNtC0Q"
    CHANNEL_LINK = "https://t.me/luxkassa_news"
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    BOT_TOKEN = "8206205994:AAE00qmtzbMQbQJRzuwKLeTkAbKf8ZNtC0Q"
    CHANNEL_LINK = "https://t.me/luxkassa_news"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# –Ø–∑—ã–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_languages: Dict[int, str] = {}

# –ü–µ—Ä–µ–≤–æ–¥—ã
translations = {
    'ru': {
        'welcome': "üëã –ü—Ä–∏–≤–µ—Ç, {username}!\n\n"
                   "üì• –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ - 0%\n"
                   "üì§ –í—ã–≤–æ–¥ - 0%\n\n"
                   "‚ö°Ô∏è –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: –æ—Ç 35 —Å –¥–æ 100 000 —Å\n"
                   "üöÄ –í—ã–≤–æ–¥: –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π\n\n"
                   "üë®‚Äçüíª –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @operator_luxkassa\n"
                   "üí¨ –ù–∞—à —á–∞—Ç: @luxkassa_chat\n\n"
                   "üîí –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –æ–ø—ã—Ç–Ω–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã",
        'channel': "üì¢ –ö–∞–Ω–∞–ª",
        'language': "üåê –Ø–∑—ã–∫"
    },
    'ky': {
        'welcome': "üëã –°–∞–ª–∞–º, {username}!\n\n"
                   "üì• –¢–æ–ª—Ç—É—Ä—É—É - 0%\n"
                   "üì§ –ß—ã–≥–∞—Ä—É—É - 0%\n\n"
                   "‚ö°Ô∏è –¢–æ–ª—Ç—É—Ä—É—É: 35 —Å –¥–µ–Ω 100 000 —Å —á–µ–π–∏–Ω\n"
                   "üöÄ –ß—ã–≥–∞—Ä—É—É: —á–µ–∫—Ç”©”©—Å“Ø–∑\n\n"
                   "üë®‚Äçüíª –ö–æ–ª–¥–æ–æ: @operator_luxkassa\n"
                   "üí¨ –ë–∏–∑–¥–∏–Ω —á–∞—Ç: @luxkassa_chat\n\n"
                   "üîí –ë–∞—Ä–¥—ã–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–ª–∞—Ä —Ç–∞–∂—Ä—ã–π–±–∞–ª—É—É –∫–∞—Ä–∂—ã –∫–æ–º–∞–Ω–¥–∞—Å—ã–Ω—ã–Ω –∫”©–∑”©–º”©–ª“Ø–Ω–¥”©",
        'channel': "üì¢ –ö–∞–Ω–∞–ª",
        'language': "üåê –¢–∏–ª"
    },
    'uz': {
        'welcome': "üëã Salom, {username}!\n\n"
                   "üì• To'ldirish - 0%\n"
                   "üì§ Chiqarish - 0%\n\n"
                   "‚ö°Ô∏è To'ldirish: 35 s dan 100 000 s gacha\n"
                   "üöÄ Chiqarish: cheklovsiz\n\n"
                   "üë®‚Äçüíª Qo'llab-quvvatlash: @operator_luxkassa\n"
                   "üí¨ Bizning chat: @luxkassa_chat\n\n"
                   "üîí Barcha tranzaktsiyalar tajribali moliyaviy jamoaning nazorati ostida",
        'channel': "üì¢ Kanal",
        'language': "üåê Til"
    }
}

def get_text(user_id: int, key: str, username: str = "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å") -> str:
    lang = user_languages.get(user_id, 'ru')
    text = translations.get(lang, translations['ru']).get(key, key)
    return text.format(username=username)

def get_main_menu_keyboard(user_id: int) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.row(
        InlineKeyboardButton(text="1XBET", url="https://t.me/xLuxkassa_bot"),
        InlineKeyboardButton(text="1WIN", url="https://t.me/wluxkassa_bot")
    )
    kb.row(
        InlineKeyboardButton(text="MELBET", url="https://t.me/mluxkassa_bot"),
        InlineKeyboardButton(text="MOSTBET", url="https://t.me/sluxkassa_bot")
    )
    kb.row(
        InlineKeyboardButton(text=get_text(user_id, 'channel'), url=CHANNEL_LINK),
        InlineKeyboardButton(text=get_text(user_id, 'language'), callback_data="change_language")
    )
    
    return kb.as_markup()

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    user_id = message.from_user.id
    user_languages.setdefault(user_id, 'ru')
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    username = message.from_user.first_name or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    await message.answer(
        get_text(user_id, 'welcome', username),
        reply_markup=get_main_menu_keyboard(user_id),
        parse_mode="HTML"
    )

@dp.callback_query(F.data == "change_language")
async def change_language_handler(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    current = user_languages.get(user_id, 'ru')
    # –¶–∏–∫–ª–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —è–∑—ã–∫–∞–º–∏: ru -> ky -> uz -> ru
    if current == 'ru':
        new_lang = 'ky'
        message = "‚úÖ –¢–∏–ª –∫—ã—Ä–≥—ã–∑—á–∞–≥–∞ ”©–∑–≥”©—Ä—Ç“Ø–ª–¥“Ø"
    elif current == 'ky':
        new_lang = 'uz'
        message = "‚úÖ Til o'zbekchaga o'zgartirildi"
    else:
        new_lang = 'ru'
        message = "‚úÖ –Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π"
    
    user_languages[user_id] = new_lang
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    username = callback.from_user.first_name or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º —è–∑—ã–∫–æ–º
    await callback.message.edit_text(
        get_text(user_id, 'welcome', username),
        reply_markup=get_main_menu_keyboard(user_id),
        parse_mode="HTML"
    )
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ —è–∑—ã–∫–∞
    await callback.answer(message)

async def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ Lux Kassa...")
    try:
        await dp.start_polling(bot)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main())
